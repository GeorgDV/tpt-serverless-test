const config = require('../../nightwatch.conf.js');

module.exports = {
  Test(browser) {
    browser
      .url('http://localhost:3000/dev/hello')
      .waitForElementVisible('body')
      .assert.containsText('body', 'Awesome Calculator!')
      .pause(1500)
      .maximizeWindow()
      .pause(500)
      // TEST 2 + 41 = 43
      .clearValue('input#ValueInput1')
      .clearValue('input#ValueInput2')
      .setValue('input#ValueInput1', '2')
      .setValue('select#SelectOperation', '+')
      .setValue('input#ValueInput2', '41')
      .click('input#OperationSubmit')
      .waitForElementVisible('body')
      .assert.value('input#AnswerOutput', '43')
      .pause(1500)
      // TEST 1 - 3 = -2
      .clearValue('input#ValueInput1')
      .clearValue('input#ValueInput2')
      .setValue('input#ValueInput1', '1')
      .setValue('select#SelectOperation', '-')
      .setValue('input#ValueInput2', '3')
      .click('input#OperationSubmit')
      .waitForElementVisible('body')
      .assert.value('input#AnswerOutput', '-2')
      .pause(1500)
      // TEST 6 / 2 = 3
      .clearValue('input#ValueInput1')
      .clearValue('input#ValueInput2')
      .setValue('input#ValueInput1', '6')
      .setValue('select#SelectOperation', '/')
      .setValue('input#ValueInput2', '2')
      .click('input#OperationSubmit')
      .waitForElementVisible('body')
      .assert.value('input#AnswerOutput', '3')
      .pause(1500)
      // TEST 100 * 3 = 300
      .clearValue('input#ValueInput1')
      .clearValue('input#ValueInput2')
      .setValue('input#ValueInput1', '100')
      .setValue('select#SelectOperation', '*')
      .setValue('input#ValueInput2', '3')
      .click('input#OperationSubmit')
      .waitForElementVisible('body')
      .assert.value('input#AnswerOutput', '300')
      .pause(2500)
      // TEST 8 > 1 = true
      .clearValue('input#ValueInput1')
      .clearValue('input#ValueInput2')
      .setValue('input#ValueInput1', '8')
      .setValue('select#SelectOperation', '>')
      .setValue('input#ValueInput2', '1')
      .click('input#OperationSubmit')
      .waitForElementVisible('body')
      .assert.value('input#AnswerOutput', 'true')
      .pause(2500)
      // TEST -24 >= 15 = false
      .clearValue('input#ValueInput1')
      .clearValue('input#ValueInput2')
      .setValue('input#ValueInput1', '-24')
      .setValue('select#SelectOperation', '>=')
      .setValue('input#ValueInput2', '15')
      .click('input#OperationSubmit')
      .waitForElementVisible('body')
      .assert.value('input#AnswerOutput', 'false')
      .pause(2500)
      // TEST -100 == -100 = true
      .clearValue('input#ValueInput1')
      .clearValue('input#ValueInput2')
      .setValue('input#ValueInput1', '-100')
      .setValue('select#SelectOperation', '==')
      .setValue('input#ValueInput2', '-100')
      .click('input#OperationSubmit')
      .waitForElementVisible('body')
      .assert.value('input#AnswerOutput', 'true')
      .pause(2500)
      // TEST 14 =< 15 = true
      .clearValue('input#ValueInput1')
      .clearValue('input#ValueInput2')
      .setValue('input#ValueInput1', '14')
      .setValue('select#SelectOperation', '=<')
      .setValue('input#ValueInput2', '15')
      .click('input#OperationSubmit')
      .waitForElementVisible('body')
      .assert.value('input#AnswerOutput', 'true')
      .pause(2500)
      // TEST -100 < 100 = true
      .clearValue('input#ValueInput1')
      .clearValue('input#ValueInput2')
      .setValue('input#ValueInput1', '-100')
      .setValue('select#SelectOperation', '<')
      .setValue('input#ValueInput2', '100')
      .click('input#OperationSubmit')
      .waitForElementVisible('body')
      .assert.value('input#AnswerOutput', 'true')
      .pause(2500)

      .end();
  },
};
